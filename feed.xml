<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.3">Jekyll</generator><link href="https://mazinahmed.net/feed.xml" rel="self" type="application/atom+xml" /><link href="https://mazinahmed.net/" rel="alternate" type="text/html" /><updated>2023-02-07T10:03:11-06:00</updated><id>https://mazinahmed.net/feed.xml</id><title type="html">Mazin Ahmed</title><subtitle>Cyber Security Engineer (Offensive Security)</subtitle><entry><title type="html">Secrets Patterns DB: Building Open-Source Regex Database for Secret Detection</title><link href="https://mazinahmed.net/blog/secrets-patterns-db/" rel="alternate" type="text/html" title="Secrets Patterns DB: Building Open-Source Regex Database for Secret Detection" /><published>2023-02-07T00:00:00-06:00</published><updated>2023-02-07T00:00:00-06:00</updated><id>https://mazinahmed.net/blog/secrets-patterns-db</id><content type="html" xml:base="https://mazinahmed.net/blog/secrets-patterns-db/">&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mazen160/public/master/static/images/Secrets-Patterns-db-blog-post.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ensuring the security of your organization’s sensitive information is critical for any security team, and detecting secrets within your AppSec program is a crucial part of this effort. However, even if you have implemented advanced security controls, your program may still be at risk if passwords and API keys are committed to GitHub and subsequently exposed in a production environment, whether through a live web application, a compiled mobile app, or minified JavaScript code. To mitigate this risk, it is essential to properly secure and manage these secrets at every stage of the development process.&lt;/p&gt;

&lt;p&gt;Detecting secrets is possible and can be automated. There are open-source tools for it that do a good job of analyzing the Git tree for potential secrets through two approaches:&lt;/p&gt;

&lt;h2 id=&quot;regular-expressions&quot;&gt;Regular Expressions&lt;/h2&gt;

&lt;p&gt;A dataset of regular expressions (Regex) rules that point to valid and known patterns of passwords, API keys, API Tokens, and Cloud API Keys.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;If written correctly, it provides high-confidence findings and limited false-positive alerts.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It can only see a very limited and small side of the picture: If there’s an API Token, and the rules cover 40-80 patterns that do not cover this particular API Token, it would not be discovered.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;shannons-entropy-checks&quot;&gt;Shannon’s Entropy Checks&lt;/h2&gt;

&lt;p&gt;Shannon’s Entropy is an estimation of the average amount of information stored in a random value. Shannon’s entropy measures the predictable information contained in a message. It has a variety of use cases in Computer Science, including data compression, validating cryptography, and here, finding passwords and secrets.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Context-agnostic: The algorithm can be applied against any language, framework, or codebase, and is trivial to compute.&lt;/li&gt;
  &lt;li&gt;Does not require the configuration of pre-defined Regular Expressions.&lt;/li&gt;
  &lt;li&gt;Can find secrets that would have never been found with pre-defined Regular Expressions.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The false-positive rate is high: It requires a manual validation of alerts before opening tickets about leaked secrets. Analysts would need to verify what type of secret it is. This will generate overhead in triaging findings.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;were-doing-regex-scanning-wrong-lets-fix-this-together&quot;&gt;We’re doing Regex scanning wrong. Let’s fix this, together&lt;/h1&gt;

&lt;p&gt;While several open-source tools utilize regular expressions to detect secrets in codebases, the number of built-in rules for these tools is limited. TruffleHog v2 offers approximately 40 rules, TruffleHog v3 offers around 790 patterns, and GitLeaks offers approximately 60 rules. While it’s a good start, it’s not enough.&lt;/p&gt;

&lt;p&gt;This project was initially made before TruffleHog v3 was released. At that time, the largest rules database was GitLeaks with 60 rules available. TruffleHog v3 helped a lot in collecting large datasets, but it’s still in a format that can not be ingestible with other tools since the new detector format is placed as Golang modules for each detection rule. This means that we would have to use Trufflehog v3 if we would like to make use of their detection rules.&lt;/p&gt;

&lt;p&gt;I have compiled and curated a database of regular expression patterns for secrets, API tokens, keys, and passwords to improve the detection of secrets in codebases. This project I built, Secrets-Patterns-DB, contains over 1600 patterns and is being open-sourced in the hope that security teams will contribute to and improve it.&lt;/p&gt;

&lt;p&gt;To ensure the quality and effectiveness of these patterns, I have written scripts to validate them against ReDoS attacks and created CI jobs to load and validate the patterns. I have also manually cleaned up any invalid patterns.&lt;/p&gt;

&lt;p&gt;I encourage security teams to use and contribute to Secrets-Patterns-DB to enhance the security of their codebases.&lt;/p&gt;

&lt;p&gt;The project is in Beta. There’s a lot of room for improvement on the project. I’m looking forward to your Pull Requests and Issues on Github to enhance Secrets-Patterns-DB for everyone.
Unified Pattern Format for all tools&lt;/p&gt;

&lt;p&gt;The Secrets-Patterns-DB has a unified pattern format that can be converted to all tools of choice.
If you use TruffleHog, GitLeaks, or other tools in your organization, Secrets-Patterns-DB can be exported to the format that your tool supports.&lt;/p&gt;

&lt;h3 id=&quot;for-trufflehog-v2&quot;&gt;For Trufflehog v2&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$&amp;gt; ./convert-rules.py ./db/rules.yml trufflehog
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;for-gitleaks&quot;&gt;For Gitleaks&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$&amp;gt; ./convert-rules.py ./db/rules.yml gitleaks
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And then, you can use the output rules with your tool.&lt;/p&gt;

&lt;h3 id=&quot;project-githubmazen160secrets-patterns-db&quot;&gt;Project: &lt;a href=&quot;https://github.com/mazen160/secrets-patterns-db&quot;&gt;github/mazen160/secrets-patterns-db&lt;/a&gt;&lt;/h3&gt;

&lt;h3 id=&quot;license&quot;&gt;License&lt;/h3&gt;

&lt;p&gt;This project is licensed under Creative-Common. If you’re building a tool or a product that uses Secrets-Patterns-DB, you should explicitly reference Secrets-Patterns-DB.&lt;/p&gt;</content><author><name>mazinahmed</name></author><category term="blog" /><category term="blog" /><category term="research" /><category term="project" /><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://raw.githubusercontent.com/mazen160/public/master/static/images/Secrets-Patterns-db-blog-post.png" /><media:content medium="image" url="https://raw.githubusercontent.com/mazen160/public/master/static/images/Secrets-Patterns-db-blog-post.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Speaking at BlakcHat MEA 2022</title><link href="https://mazinahmed.net/blog/speaking-at-blackhat-mea-2022/" rel="alternate" type="text/html" title="Speaking at BlakcHat MEA 2022" /><published>2022-12-05T00:00:00-06:00</published><updated>2022-12-05T00:00:00-06:00</updated><id>https://mazinahmed.net/blog/speaking-at-blackhat-mea-2022</id><content type="html" xml:base="https://mazinahmed.net/blog/speaking-at-blackhat-mea-2022/">&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mazen160/public/master/static/images/0e8d0273-9732-4eeb-9c93-65d03a686da1.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Riyadh, Saudi Arabia recently hosted BlackHat MEA (Middle East &amp;amp; Africa), the largest security conference in the Middle East and Africa region.&lt;/p&gt;

&lt;p&gt;BlackHat MEA featured a range of events, including an Executive Summit, Technical tracks, a Drone Hacking village, a Car Hacking village, a live Tesla hacking event, and a startup competition..&lt;/p&gt;

&lt;h2 id=&quot;my-talk&quot;&gt;My Talk&lt;/h2&gt;

&lt;p&gt;I have had the opportunity to speak this year at BlackHat, where I presented my latest research, titled “Demystifying Practical DDoS Attacks”.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mazen160/public/master/static/images/0c5514f9-e535-4678-a082-d2fba612105c.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mazen160/public/master/static/images/9e146db4-7fcb-46b9-bab2-31bd40afc700.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;what-i-liked-at-blackhat-and-why-you-should-apply-next-year&quot;&gt;What I liked at BlackHat, and why you should apply next year&lt;/h1&gt;

&lt;p&gt;When arriving at the Riyadh airport (King Khalid International Airport), this vehicle was waiting for all speakers.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mazen160/public/master/static/images/97d44732-e419-43df-914c-fbca2f98bcaa.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is just one of the nice tokens of hospitality the conference made. It honestly leaves an amazing impression about the conference.&lt;/p&gt;

&lt;p&gt;The organization of the conference was impressive. It was clear that a lot of effort had gone into planning and coordinating the event. This was evident in the high quality of the talks, the smooth logistics of the venue, the activities designed for students, and the startup competition. Overall, it was a well-organized and professionally-run conference.&lt;/p&gt;

&lt;h1 id=&quot;awesome-talks&quot;&gt;Awesome talks&lt;/h1&gt;

&lt;p&gt;I didn’t have the opportunity to see as many talks as I would have liked at BlackHat MEA due to the multiple tracks running simultaneously. However, I was able to catch a few really interesting presentations. I’m looking forward to the release of the conference recordings online so that I can catch up on the talks that I missed. For next year’s conference, I hope that there will be fewer tracks so that attendees can more easily plan which talks to attend.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;“Disrupting Ransomware” By Lance James&lt;/li&gt;
  &lt;li&gt;“Assume Breach” By Caleb Sima&lt;/li&gt;
  &lt;li&gt;“Human Security Engineering – A Holistic Approach To Addressing Human Incidents” By Ira Winkler&lt;/li&gt;
  &lt;li&gt;“I Bet Nobody Ever Thought To Do This With A Camel..” By Chris Roberts&lt;/li&gt;
  &lt;li&gt;“Apt Hunting And The Threat Intelligence Dilemma” By Salah Altokhais&lt;/li&gt;
  &lt;li&gt;“Dotdumper: Automatically Unpacking Dotnet Based Malware” By Max Kersten&lt;/li&gt;
  &lt;li&gt;“Wipermania: An All You Can Wipe Buffet” By Max Kersten&lt;/li&gt;
  &lt;li&gt;“Turbocharging Ioc Validation: Become A More Efficient CTI Analyst” By Arwa Alomari&lt;/li&gt;
  &lt;li&gt;“So Many Devices, So Little Time” By Joseph Mccray&lt;/li&gt;
  &lt;li&gt;“Abusing Azure Virtual Machines” By Tarek Naja&lt;/li&gt;
  &lt;li&gt;“The Evolution Of Ios Security” By Prateek Gianchandani&lt;/li&gt;
  &lt;li&gt;“What The Waf: Scalable, Multi-cloud, Automated Security Using Waf” By Khaled Farah&lt;/li&gt;
  &lt;li&gt;“An Attacker’s Perspective” By Quinn Carman&lt;/li&gt;
  &lt;li&gt;“Supply Chain Attacks Are The New High Watermark” By Milad Aslaner&lt;/li&gt;
  &lt;li&gt;“Scaling Soc And Ir Teams To Defend Kubernetes Based Workloads” By Milad Alnaser&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;photos-for-the-memory-&quot;&gt;Photos for the memory 💚&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mazen160/public/master/static/images/940a40a5-87ca-4f22-9d98-53b9b7d2c581.jpg&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Quinn Carman, the former NSA red team chief presented a talk on how adversaries are approaching targets and patterns seen across different engagements. Talk: An Attacker’s Perspective&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mazen160/public/master/static/images/5e1702d1-cb0f-4841-a54e-57c7b2d96a5f.jpg&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Ira Winkler shared an interesting perspective about today’s industry approach to solving Human Security challenges, and how organizations can improve and address security awareness risks. Talk: Human Security Engineering – A Holistic Approach To Addressing Human Incidents&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mazen160/public/master/static/images/17b0b777-8a8e-4201-9ece-2ec4aa887f06.jpg&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Lance James speaking about building a Ransomware remediation system. Talk: Disrupting Ransomware&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mazen160/public/master/static/images/8cf6e7f9-a166-4941-9893-b407f261b065.jpg&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Salah Altokhais giving a talk: “Apt Hunting And The Threat Intelligence Dilemma”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mazen160/public/master/static/images/bd95a5ad-c8e3-4996-b7a9-1c50be4705ff.jpg&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Arwa Alomari presented a talk on data enrichment of IOCs, and automating CTI analysis. Talk: Turbocharging Ioc Validation: Become A More Efficient CTI Analyst&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mazen160/public/master/static/images/f450539f-6f3c-409e-bcee-13bba2046bfd.jpg&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Max Kersten presented an analysis of various wipers attacks in the past years, along with similarities in their development and execution. Talk: “Wipermania: An All You Can Wipe Buffet”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mazen160/public/master/static/images/a03e7c2e-b4b6-4160-948d-ff12099aadd1.jpg&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;With Chris Roberts!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mazen160/public/master/static/images/d2060746-2964-48ea-b205-f527ce9df13b.jpg&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Our 971Sec Booth, is a UAE-based cyber security community. My favorite security community of all time.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mazen160/public/master/static/images/0d9a196c-a83b-4612-b7ce-30c093904399.jpg&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;BlackHat MEA venue at night.&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;final-thoughts&quot;&gt;Final Thoughts&lt;/h1&gt;

&lt;p&gt;I would like to thank the Saudi Federation for Cyber Security, Programming, and Drones for bringing BlackHat to the MENA region, and organizing an excellent event.&lt;/p&gt;

&lt;p&gt;Till next year!&lt;/p&gt;</content><author><name>mazinahmed</name></author><category term="blog" /><category term="blog" /><category term="conference" /><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://mazin.s3.amazonaws.com/public/1cf59bed-5dc9-4c1a-8c31-c87dde2420df/header.jpg" /><media:content medium="image" url="https://mazin.s3.amazonaws.com/public/1cf59bed-5dc9-4c1a-8c31-c87dde2420df/header.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">DoS Attacks are Dead: Demystifying Practical DoS Attacks</title><link href="https://mazinahmed.net/blog/demystfying-practical-dos-attacks-talk/" rel="alternate" type="text/html" title="DoS Attacks are Dead: Demystifying Practical DoS Attacks" /><published>2022-12-04T00:00:00-06:00</published><updated>2022-12-04T00:00:00-06:00</updated><id>https://mazinahmed.net/blog/demystfying-practical-dos-attacks-talk</id><content type="html" xml:base="https://mazinahmed.net/blog/demystfying-practical-dos-attacks-talk/">&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mazen160/public/master/static/images/0c5514f9-e535-4678-a082-d2fba612105c.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mazen160/public/master/static/images/9e146db4-7fcb-46b9-bab2-31bd40afc700.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I recently had the opportunity to speak at BlackHat MEA 2022, the largest security conference in the Middle East and Africa region. My talk, titled “Demystifying Practical DDoS Attacks”, focused on the increasing threat of DoS attacks and the need for improved defense solutions, and to practically validate current DDoS prevention solutions.&lt;/p&gt;

&lt;p&gt;In my presentation, I shared my research on practical DoS attacks, including recent Application-Level DoS attacks and evasion techniques. I also discussed the discovery of unique DoS vectors in modern APIs and demonstrated how to simulate the largest Layer 7 DDoS attack that Google Cloud experienced in August 2022.&lt;/p&gt;

&lt;p&gt;One of the key points I emphasized in my talk was the need to go beyond traditional volumetric DDoS attacks and focus on the more sophisticated and stealthy Layer 7 attacks. These attacks, which target the application layer of a network, can be harder to detect and mitigate, and can cause significant disruption to businesses and organizations.&lt;/p&gt;

&lt;p&gt;I also discussed the importance of developing effective defense solutions and shared some of the techniques and approaches I have been researching in this area. This included discussing the use of machine learning and artificial intelligence to improve the detection and response to DoS attacks.&lt;/p&gt;

&lt;p&gt;Overall, my talk was well-received by the audience at BlackHat MEA, and I was happy to have the opportunity to share my research on this important topic.&lt;/p&gt;

&lt;h2 id=&quot;talk-abstract&quot;&gt;Talk Abstract&lt;/h2&gt;

&lt;p&gt;DoS attacks have been a nightmare that increases every day. While the news emphasizes notable Volumetric DDoS Attacks, there is much more to that that is not being publicly highlighted.&lt;/p&gt;

&lt;p&gt;In my talk, I will share my research on practical DoS Attacks that I have been researching, Layer 7 DoS attacks and TTPs, and evasion of DDoS Defense Solutions. I’m also discussing the discovery approaches of unique DoS vectors in modern APIs. Lastly, I will run a drill on how to simulate the largest Layer 7 DDoS attack that Google Cloud faced in August 2022 (with a peak of 46M requests per second).&lt;/p&gt;

&lt;h2 id=&quot;slides&quot;&gt;Slides&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;PDF: &lt;a href=&quot;https://github.com/mazen160/public/raw/master/documents/DoS%20Attacks%20are%20Dead%20-%20Demystifying%20Practical%20DoS%20Attacks%20-%20BH%20MEA%202022.pdf&quot;&gt;DoS Attacks are Dead: Demystifying Practical DoS Attacks - BH MEA 2022.pdf&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</content><author><name>mazinahmed</name></author><category term="blog" /><category term="blog" /><category term="conference" /><category term="research" /><category term="devops" /><category term="devsecops" /><category term="cloudsecurity" /><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://raw.githubusercontent.com/mazen160/public/master/static/images/0c5514f9-e535-4678-a082-d2fba612105c.jpg" /><media:content medium="image" url="https://raw.githubusercontent.com/mazen160/public/master/static/images/0c5514f9-e535-4678-a082-d2fba612105c.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Shennina Framework - Automating Host Exploitation with AI</title><link href="https://mazinahmed.net/blog/shennina-exploitation-framework/" rel="alternate" type="text/html" title="Shennina Framework - Automating Host Exploitation with AI" /><published>2022-11-08T00:00:00-06:00</published><updated>2022-11-08T00:00:00-06:00</updated><id>https://mazinahmed.net/blog/shennina-exploitation-framework</id><content type="html" xml:base="https://mazinahmed.net/blog/shennina-exploitation-framework/">&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mazen160/public/master/static/images/0e77a1c3-5aa9-4683-9dc6-4b83d221b5ca.png&quot; alt=&quot;Banner&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In 2019, &lt;a href=&quot;https://www.linkedin.com/in/khaledfarah/&quot;&gt;Khaled Farah&lt;/a&gt; and I participated in a security competition for developing offensive security tools.&lt;/p&gt;

&lt;p&gt;I enjoy building security tools, and this competition was funded by HITB (Hack-in-the-Box) with a reward of $100,000 for the winners. I thought it would be an interesting challenge to work on as a side project.&lt;/p&gt;

&lt;p&gt;I met my friend Khalid, he was also interested in winning this competition. We signed up, and once accepted, we started meeting regularly to build this project.&lt;/p&gt;

&lt;h1 id=&quot;goals&quot;&gt;Goals&lt;/h1&gt;

&lt;p&gt;The HITB CyberWeek AI Challenge had two categories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Host Exploitation&lt;/li&gt;
  &lt;li&gt;Malware Evasion&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mazen160/public/master/static/images/82ca0a48-1b0a-4a95-885f-a1052ad7ce4e.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Host exploitation sounds more relevant to our experience. The goal was to build a host exploitation framework using AI, and based on the concept of DeepExploit. The winning team should ideally prove the accuracy of the model, the improvement of the training and execution speed, and the technical features that have been added to the framework.&lt;/p&gt;

&lt;p&gt;We started experimenting with DeepExploit, and how it works, and we decided to start a new project based on the ideas we had on how to improve the tool.&lt;/p&gt;

&lt;p&gt;This eventually ended up having us develop Shennina, a host exploitation framework that does:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Automatically self-learning reliable exploits&lt;/li&gt;
  &lt;li&gt;Out-of-Band technique testing for exploitation checks.&lt;/li&gt;
  &lt;li&gt;Exploits clustering.&lt;/li&gt;
  &lt;li&gt;Scriptable attack method within the post-exploitation phase.&lt;/li&gt;
  &lt;li&gt;Automated exfiltration of important data on compromised servers.&lt;/li&gt;
  &lt;li&gt;Reporting capabilities.&lt;/li&gt;
  &lt;li&gt;Deception capabilities.&lt;/li&gt;
  &lt;li&gt;Ransomware simulation capabilities for Windows, macOS, and Linux.&lt;/li&gt;
  &lt;li&gt;Post exploitation capabilities&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The project is &lt;strong&gt;4 times faster than DeepExploit&lt;/strong&gt;. We were excited about the results.&lt;/p&gt;

&lt;h1 id=&quot;demo&quot;&gt;Demo&lt;/h1&gt;

&lt;h2 id=&quot;running-exploitation-mode&quot;&gt;Running Exploitation Mode&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mazen160/public/master/static/images/69f27b4e-ef87-4484-b85b-6828c6edd96a.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;running-vulnerability-scanning-mode&quot;&gt;Running Vulnerability Scanning mode&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mazen160/public/master/static/images/4685c03f-fd4e-48c2-8074-decc443556de.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;deception-detection-as-a-part-of-post-exploitation&quot;&gt;Deception Detection as a part of Post Exploitation&lt;/h2&gt;

&lt;p&gt;Shennina comes with a deception detection capability that detects if the machine being exploited is a Virtual Machine or Container, and then terminates post-exploitation once it’s detected. This feature is powered by Metasploit modules.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mazen160/public/master/static/images/a999c881-3fb1-4193-b899-f5fe907469d1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The Shenina Framework has qualified for the top 5 projects (out of 40 projects). We worked on developing the tool further to prepare for our final demo that will be live at HITB Abu Dhabi 2019.&lt;/p&gt;

&lt;p&gt;Unfortunately, the rules of the competition and the judging criteria changed during the demo day.&lt;/p&gt;

&lt;p&gt;We enjoyed HITB CyberWeek 2019. It was an amazing journey, and I enjoyed building the Shennina Framework. I also presented my research on JWT hacking at that time - it was a busy week :)&lt;/p&gt;

&lt;h1 id=&quot;future-of-shennina&quot;&gt;Future of Shennina?&lt;/h1&gt;

&lt;p&gt;We are planning to open-source the project and the experiment. There are no plans for further maintaining Shennina in the near future.&lt;/p&gt;

&lt;h1 id=&quot;special-thanks&quot;&gt;Special Thanks&lt;/h1&gt;

&lt;p&gt;I would like to thank Chris P, Chris Roberts, Rami Shaath, and the 971Sec community for their feedback.&lt;/p&gt;

&lt;p&gt;I also would like to thank the judges of HITB Cyber Week Abu Dhabi.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.linkedin.com/in/isao-takaesu-47485a77&quot;&gt;Isao Takaesu&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.linkedin.com/in/zanero/&quot;&gt;Dr. Stefano Zanero&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.linkedin.com/in/bushra-alblooshi-63953a80&quot;&gt;Dr. Bushra Al Belooshi&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.linkedin.com/in/hoda-a-alkhzaimi-b36a3910b&quot;&gt;Dr. Hoda Alkhzaimi&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.linkedin.com/in/ericcamellini/&quot;&gt;Eric Camellini&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.linkedin.com/in/fadi-aloul-phd-cissp-2a718b1/&quot;&gt;Dr. Fadi Aloul&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.linkedin.com/in/cgivre/&quot;&gt;Charles Givre&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Of course, I can’t forget to thank &lt;a href=&quot;https://www.linkedin.com/in/l33tdawg&quot;&gt;Dhillon Kannabhiran&lt;/a&gt; for organizing another excellent HITB conference.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;h3 id=&quot;github-repository-githubcommazen160shennina&quot;&gt;Github Repository: &lt;a href=&quot;https://github.com/mazen160/shennina&quot;&gt;github.com/mazen160/shennina&lt;/a&gt;&lt;/h3&gt;</content><author><name>mazinahmed</name></author><category term="blog" /><category term="blog" /><category term="research" /><category term="shennina" /><category term="exploitation" /><category term="post-exploitation" /><category term="host-exploitation" /><summary type="html"></summary></entry><entry><title type="html">Scan Terraform plans and changes with tfquery via SQL-powered framework</title><link href="https://mazinahmed.net/blog/tfplan-release/" rel="alternate" type="text/html" title="Scan Terraform plans and changes with tfquery via SQL-powered framework" /><published>2022-10-27T00:00:00-05:00</published><updated>2022-10-27T00:00:00-05:00</updated><id>https://mazinahmed.net/blog/tfplan-release</id><content type="html" xml:base="https://mazinahmed.net/blog/tfplan-release/">&lt;p&gt;New Release: tfquery now supports SQL queries for Terraform Plan Scanning&lt;/p&gt;

&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mazen160/public/master/static/images/5d76d6e7-536c-4f78-bf16-752d62914d53.png&quot; alt=&quot;&quot; /&gt;&lt;/h2&gt;

&lt;p&gt;In case you’re an Infrastructure security engineer and have not tried tfquery yet, this will be a great blog post for you.&lt;/p&gt;

&lt;p&gt;Tfquery is a framework that allows running SQL queries on Terraform code. It’s made to analyze your Terraform infrastructure, locate resources, run security compliance checks, spot misconfigured resources, develop CI benchmarks, and much more.&lt;/p&gt;

&lt;p&gt;I developed it to solve an existing problem I’m facing: &lt;strong&gt;understanding large infrastructure quickly&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mazen160/public/master/static/images/36c7dd81-4f6e-49f7-942f-14a90ead3db6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Last year, I spoke at DEFCON about the risks of running Insecure Terraform environments, and how attackers can make use of current Terraform Enterprise environments to compromise the entire infrastructure with normal employee access to Github.&lt;/p&gt;

&lt;p&gt;There was no patch or workaround released by HashiCorp to limit external providers or prevent local-exec data sources.&lt;/p&gt;

&lt;p&gt;Tfquery support was specific to tfstate. It was able to run SQL queries on the current Terraform workspace state - and also supports multi-workspaces when importing state files.&lt;/p&gt;

&lt;p&gt;My plan is to add support for tfplan within tfquery to be able to scan Terraform plans and changes. This allows engineers to write Terraform misconfiguration checks as SQL queries.&lt;/p&gt;

&lt;h3 id=&quot;semgrep-hcl-support-vs-tfquery&quot;&gt;semgrep HCL support vs. tfquery&lt;/h3&gt;

&lt;p&gt;Semgrep announced in October 2021 the support for scanning HCL files. The challenge with semantic scanning of HCL code (a similar approach to what tfsec, checkov, and similar tools are doing) is that it’s limited to non-dynamic HCL code. Terraform is much more complex and without having the final state of rendered infrastructure code, checks would not be as accurate as needed.&lt;/p&gt;

&lt;p&gt;Also, you may need to write a logic to make sure that findings are not alerted for a codebase already existing in your Terraform workspace, otherwise, you would be blocking the CI pipeline where a member did not introduce any vulnerable code.&lt;/p&gt;

&lt;h1 id=&quot;tfquery-approach-for-terraform-plan-scanning&quot;&gt;tfquery approach for Terraform Plan scanning&lt;/h1&gt;

&lt;p&gt;Whenever a PR is created for a Terraform change, you should be able to scan changes through tfquery.&lt;/p&gt;

&lt;p&gt;You can now write SQL queries that are much more elegant to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Check for providers if not matching an allowed list.&lt;/li&gt;
  &lt;li&gt;Check for wildcard AWS Policies.&lt;/li&gt;
  &lt;li&gt;Check for new IAM users.&lt;/li&gt;
  &lt;li&gt;Check for an S3 bucket with versioning not being enabled.&lt;/li&gt;
  &lt;li&gt;etc…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mazen160/public/master/static/images/85f15edc-dc7d-4a3c-90a6-5749298d6c3c.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mazen160/public/master/static/images/703f76c6-8f49-416a-8c7d-473be4e49f61.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;try-tfquery-at-githubcommazen160tfquery&quot;&gt;Try tfquery at: &lt;a href=&quot;https://github.com/mazen160/tfquery&quot;&gt;github.com/mazen160/tfquery&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Find my DEFCON talk: &lt;a href=&quot;https://mazinahmed.net/blog/attacking-terraform-environments/&quot;&gt;mazinahmed.net/blog/attacking-terraform-environments&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;</content><author><name>mazinahmed</name></author><category term="blog" /><category term="blog" /><category term="tfquery" /><category term="terraform" /><category term="tfplan" /><category term="devsecops" /><category term="devops" /><category term="cloudsecurity" /><summary type="html">New Release: tfquery now supports SQL queries for Terraform Plan Scanning</summary></entry><entry><title type="html">Twitch Internal Security Tools: In-depth Analysis of the Leaked Twitch Security Tools</title><link href="https://mazinahmed.net/blog/indepth-analysis-twitch-security-tools/" rel="alternate" type="text/html" title="Twitch Internal Security Tools: In-depth Analysis of the Leaked Twitch Security Tools" /><published>2022-06-01T00:00:00-05:00</published><updated>2022-06-01T00:00:00-05:00</updated><id>https://mazinahmed.net/blog/indepth-analysis-twitch-security-tools</id><content type="html" xml:base="https://mazinahmed.net/blog/indepth-analysis-twitch-security-tools/">&lt;h2&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mazen160/public/master/static/images/banner%20-%20Twitch%20Internal%20Security%20Tools%20blog%20post.png&quot; alt=&quot;&quot; /&gt;&lt;/h2&gt;

&lt;p&gt;How Twitch was hacked? What security controls did Twitch build?&lt;/p&gt;

&lt;p&gt;The Twitch breach revealed more than 120 internal security tools developed by the Twitch security team.&lt;/p&gt;

&lt;p&gt;I analyzed all the leaked security tools that were developed by Twitch Security. Check out the full research.&lt;/p&gt;

&lt;h1 id=&quot;background&quot;&gt;Background&lt;/h1&gt;
&lt;p&gt;Twitch is an interactive live-streaming service for content, gaming, entertainment, sports, and music. In 2015, Amazon acquired Twitch for $970 million, and after COVID-19 time, its market value skyrocketed as more people adapted live-streaming from home.&lt;/p&gt;

&lt;p&gt;On October 6, 2021, it was announced that Twitch suffered a massive data breach that leaked their source-code, internal databases, revenue documents, and payouts documents of their members.&lt;/p&gt;

&lt;p&gt;The security tools of Twitch were leaked during the breach. Twitch Security has clearly invested a lot of time and effort in building its security program. This can be seen from the tools published on the Internet; the majority of companies with mature security programs today do not have 50% of what Twitch security internally built over the years.&lt;/p&gt;

&lt;p&gt;I analyzed all the security tools written by Twitch security. I thoroughly reviewed the source code, configurations, build config process, and everything that has been leaked and became public knowledge on the Internet within the breach.&lt;/p&gt;

&lt;p&gt;In this blog post, I’m analyzing all the security tools that Twitch security built within their security program. I’m also tagging them based on the use case, services, and categories. This research should act as a reference to learn how modern security teams build their programs, and to hopefully get inspired into enhancing currently-running security programs.&lt;/p&gt;

&lt;p&gt;At the end of the blog post, I will share my thoughts on the breach, how I feel about it, and what could have been done by Twitch to handle this breach in better ways.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;Background&lt;/li&gt;
  &lt;li&gt;Leaked Tools&lt;/li&gt;
  &lt;li&gt;Final Thoughts&lt;/li&gt;
  &lt;li&gt;References&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;who-am-i&quot;&gt;Who Am I?&lt;/h1&gt;

&lt;p&gt;I’m a cyber security engineer that specializes in AppSec, InfraSec and building security programs. Read more about my previous work at &lt;a href=&quot;https://mazinahmed.net&quot;&gt;mazinahmed.net&lt;/a&gt;. I also built &lt;a href=&quot;https://fullhunt.io&quot;&gt;FullHunt.io&lt;/a&gt;, &lt;a href=&quot;https://stressful.io&quot;&gt;Stressful.io&lt;/a&gt;, &lt;a href=&quot;https://github.com/mazen160/tfquery&quot;&gt;tfquery&lt;/a&gt;, and few open-source security tools.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;leaked-tools&quot;&gt;Leaked Tools&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;1) Tool&lt;/strong&gt;: agentconn&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A simple Go package to open an ssh-agent socket.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;script&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;2) Tool&lt;/strong&gt;: apache-pf-deb-build&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Apache PingFederate Module Deb Package Builder.&lt;/p&gt;

&lt;p&gt;PingFederate is an enterprise federation server that enables user authentication and single sign-on. It serves as a global authentication authority that allows employees, customers, and partners to securely access all the applications they need from any device.&lt;/p&gt;

&lt;p&gt;This module is a builder for integrating PingFederate with Apache.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;apache&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;authentication&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;authorization&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pingfederate&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;3) Tool&lt;/strong&gt;: AWS-Cloudtrail-Security-Configs&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Miscellaneous scripts for configuring AWS cloudtrails&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cloudtrails&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;config&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;4) Tool&lt;/strong&gt;: AWS-Cloudtrail-Security-tform&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: This is the terraform version of the configuration at AWS-Cloudtrail-Security-Configs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;terraform&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cloudtrails&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;config&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;5) Tool&lt;/strong&gt;: bastion-squid-build&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A patch file for Squid config that is used on “Bastions” service.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;squid&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;config&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;6) Tool&lt;/strong&gt;: bastionmetrics&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: An old script that pushes logs from a service called “Bastions”.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;logging&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;automation&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;7) Tool&lt;/strong&gt;: beholder&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: An internal Python Flask app for Security to run reports against Jira and Google Sheets to get team program reports and metrics.&lt;/p&gt;

&lt;p&gt;It also has a script to login to ECR using AWS aws role-assume with the duration of 900 seconds, and stores secrets within AWS Secrets Manager.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;reporting&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;automation&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;google-spreadsheets&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jira&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;8) Tool&lt;/strong&gt;: beholder-terraform&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Configuration for deploying “beholder” project through Terraform.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;terraform&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;config&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;9) Tool&lt;/strong&gt;: cdn_finder&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: This is a script to take zone files / DNS records, pull the CNAME, and determine what CDNs are in use based on the associated CNAME.&lt;/p&gt;

&lt;p&gt;The script has an SSL certificate parser, but the data pulling capability is manual. It has instructions on how to pull DNS records from Infoblox (a cloud product that runs DNS management services), and AWS Route53&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;automation&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cdn&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;10) Tool&lt;/strong&gt;: cfn-templates&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Incomplete repository for AWS CloudFormation templates&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cloudformation&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;11) Tool&lt;/strong&gt;: cloudflare-lambda&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A Lambda that continuously hits CloudFlare API, pulls requests logs, and pushes it to S3.&lt;/p&gt;

&lt;p&gt;CloudFlare supports by default automated archiving to S3. It’s not clear why this option was made instead of using the CloudFlare option.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cloudflare&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;logging&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;automation&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;12) Tool&lt;/strong&gt;: cloudflare-parsing&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A script to parse CloudFlare logs into a format that is easier to read.&lt;/p&gt;

&lt;p&gt;It supports two formats, custom JSON format, and another format that is easier to use with AWS Athena.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;athena&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cloudflare&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;logging&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;13) Tool&lt;/strong&gt;: cloudflare 2 elasticsearch&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A script to push Cloudflare logs from a local machine to Elasticsearch.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cloudflare&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;elasticsearch&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;14) Tool&lt;/strong&gt;: codename-generator&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A script to generate code names through the “pycorpora” Python package.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;miscs&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;15) Tool&lt;/strong&gt;: contingent-auth-policies&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A repo that stores a single AWS policy.&lt;/p&gt;

&lt;p&gt;The policy seems to be permissive and allows actions that can be insecure. Also, it’s set to “*” wildcard resources. It’s not clear who has this policy assigned to.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;16) Tool&lt;/strong&gt;: credentialchecker&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A lambda app that checks for leaked credentials against Twitch for risk calculation purposes. Also called “
Arstotzka”.
It takes a list of breach lists (email:password, username:password), and runs the data against Twitch users. It runs manually; not when a user-logged in against the hash, so it’s unclear how passwords are stored internally (is it stored in plain text? that’s why this tool is made possible?).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;passwords&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s3&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lambda&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sqs&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;17) Tool&lt;/strong&gt;: credentialchecker-vendor&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Vendor packages for credentialchecker build.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;miscs&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;18) Tool&lt;/strong&gt;: ctfd&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Clone of the CTFd public platform repository.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ctf&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;19) Tool&lt;/strong&gt;: cwijulia-sandbox&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A security experiment to evaluate the accuracy of results provided by AWS ECR vulnerabilities feeds.&lt;/p&gt;

&lt;p&gt;Part 1: Terraform code is made to set up a network on AWS. It sets up EC2, VPC, route tables, and subnets through Terraform modules.
Part 2: It deploys an ECR image that has a vulnerable Cron package. This image will be ideally scanned by AWS ECR. The goal is to find if AWS ECR will report the vulnerable Cron package through its identified vulnerabilities feeds. This process is automated through different scripts.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;research&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ecr&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;terraform&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vulnerability&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;20) Tool&lt;/strong&gt;: duo_logging&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: CloudFormation configuration to configure a Lambda to write Duo Security logs to S3.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;duo&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lambda&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s3&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cloudformation&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;21) Tool&lt;/strong&gt;: duoauthproxy&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Duo Security Authentication proxy - Empty repository.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;duo&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;22) Tool&lt;/strong&gt;: duoauthproxy_build&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Duo Authentication Security - Build package.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;duo&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;23) Tool&lt;/strong&gt;: duoauthproxy-build&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Duo Authentication Security - Build package, made for Ubuntu.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;duo&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;24) Tool&lt;/strong&gt;: ephemeral cert&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A Golang package to generate self-signed TLS certificates and return tls.Certificate object with a default common name to “localhost”.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tls&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;certificate&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;golang&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;25) Tool&lt;/strong&gt;: fluxo&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A tool to fetch data from an Amazon service that seems to be for threat intelligence, and stores it on Jira and Dynamodb.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cti&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ti&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;threat-intel&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;amazon&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jira&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dynamo&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;26) Tool&lt;/strong&gt;: go-audit&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Clone of the public go-audit repository.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;golang&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;miscs&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;27) Tool&lt;/strong&gt;: go-audit-build&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Build package for go-audit.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;miscs&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;28) Tool&lt;/strong&gt;: go-sirtbot&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A Slack bot written in Golang - seems incomplete.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;golang&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;slack&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;automation&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;29) Tool&lt;/strong&gt;: go-squid-duoauth&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Squid Go Authentication Helper. Deprecated project.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;golang&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;duo-security&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;squid&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;30) Tool&lt;/strong&gt;: go-ykpiv&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: An internal fork of go-ykpiv. go-ykpiv is a Golang interface to manage Yubikeys, including a crypto.Signer &amp;amp; crypto.Decrypter interface.&lt;/p&gt;

&lt;p&gt;The changes related to this package are within the build process.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;golang&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yubi-keys&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;crypto&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;31) Tool&lt;/strong&gt;: golang-x-crypto&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A clone of Golang crypto libraries.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;golang&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;crypto&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;32) Tool&lt;/strong&gt;: gophish-config&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Minimal configurations for GoPhish server.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;golang&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gophish&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;config&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;33) Tool&lt;/strong&gt;: gravitational-teleport&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Clone for Gravitational Teleport, Certificate authority and access plane for SSH, Kubernetes, web applications, and databases.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;golang&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;kubernetes&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;teleport&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rbac&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;34) Tool&lt;/strong&gt;: gsuite-hourly&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A script that pulls logs from Google Gsuite every hour, and store it into AWS S3.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gsuite&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s3&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;logging&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;35) Tool&lt;/strong&gt;: homebrew&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: a Homebrew repository that hosts macOS software distributed by the
security team.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;macos&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;homebrew&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;36) Tool&lt;/strong&gt;: hunts&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Threat Hunting playbooks. It consists of  write-ups of running threat hunt activities for AWS, Duo Implementation, Command and Control activities, reverse TCP tunneling, and general suspicious activities.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;threat-hunting&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cti&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;duo&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;37) Tool&lt;/strong&gt;: Inquisitor&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A well-architectured secrets discovery tool that can identify secrets within JIRA tickets and Git commits. It also has an integration with alerting via modules, including standard screen logging, email alerting, and creating a ticket on Jira.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;appsec&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;secret-detection&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jira&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;automation&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;38) Tool&lt;/strong&gt;: jupyterhub&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Shared notebook environment for SIRT.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jupyter&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;notebook&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;39) Tool&lt;/strong&gt;: lambda-amazonsg&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Lambda function to manage security groups within AWS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lambda&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;security-groups&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;40) Tool&lt;/strong&gt;: lambda-athenalert&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: An AWS Lambda function that can automatically run an Athena query
and raise an alert if there are any results. It is most useful when run on a
cron via CloudWatch events.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;athena&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cloudwatch&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lambda&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;41) Tool&lt;/strong&gt;: lambda-autocert&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A lambda function that automates the process of renewing TLS certificates from Let’s Encrypt using Route 53 and the ACME dns-01
challenge.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lets-encrypt&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lambda&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tls&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;42) Tool&lt;/strong&gt;: lambda-autosg&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: An AWS Lambda function that can allow for dynamic security
group egress rules based on DNS hostnames. It is most useful when invoked as a
con job at regular intervals (e.g. 1 minute) to update rules when a DNS record
changes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lambda&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;automation&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dns&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;43) Tool&lt;/strong&gt;: lambda-dogfish-sg&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: An AWS Lambda function that consumes IP prefix information from
&lt;a href=&quot;https://w.amazon.com/index.php/Dogfish&quot;&gt;Amazon Dogfish&lt;/a&gt; and writes them to
a specified AWS security group.&lt;/p&gt;

&lt;p&gt;Amazon Dogfish seems to be an internal Amazon service.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lambda&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dns&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;security-groups&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;44) Tool&lt;/strong&gt;: lambda-teleportmon&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: An internal service called “lambda-teleportmon”. It’s unclear on what the purpose of the service is.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lambda&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;45) Tool&lt;/strong&gt;: maxmind-backup&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: An AWS Lambda function that downloads the latest release of the Maxmind DB, and stores it in S3.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s3&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lambda&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;maxmind&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;46) Tool&lt;/strong&gt;: nabu&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Twitch Security internal security scanner. It seems to be a work-in-progress and has not been completed. It’s also unclear what it will cover or detect.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;appsec&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;security-scanning&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;47) Tool&lt;/strong&gt;: naive&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A repository for collecting Regular expressions that can be useful in different scenarios. The repository seems empty.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;appsec&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;regex&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;48) Tool&lt;/strong&gt;: netscrape&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A repository that hosts Cloudformation config. It’s described as a place to hold source code and other assets for the Netscrape campaign.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cloudformation&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;49) Tool&lt;/strong&gt;: nice&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Nice is a suite of security-oriented static analysis tools for Go. It uses go/analysis framework to run static code analysis on Golang code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;golang&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sast&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;50) Tool&lt;/strong&gt;: notebook-template&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Notebook template for threat hunting&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cti&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;threat-hunting&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;51) Tool&lt;/strong&gt;: notebooks&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Another repository of notebooks for threat hunting. It covers machine-level checks, including device encryption, and checks for unmanaged devices.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cti&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;threat-hunting&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;52) Tool&lt;/strong&gt;: nuget-security&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: NuGet Package provided by Twitch Application Security.&lt;/p&gt;

&lt;p&gt;Uses external project https://github.com/security-code-scan/security-code-scan) and the security rules of https://github.com/dotnet/roslyn-analyzers.&lt;/p&gt;

&lt;p&gt;This is a C# and VB.NET static code analyzer that allows the detection of security vulnerabilities, including SQLI, RCE, XSS, etc. It also supports running within the CI pipeline and does its scanning through taint analysis for input data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ci&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vb.net&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;c-sharp&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;static-code-analysis&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;53) Tool&lt;/strong&gt;: odds-n-ends&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A general repository for Security snippets. It includes one script that pulls SalesForce event logs and dumps logs into S3.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;salesforce&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;automation&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s3&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;54) Tool&lt;/strong&gt;: opentoken&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: This is a Go library that can encrypt and decrypt OpenTokens.&lt;/p&gt;

&lt;p&gt;It is based on this RFC: https://tools.ietf.org/html/draft-smith-opentoken-02&lt;/p&gt;

&lt;p&gt;OpenToken used to be a popular protocol for transmitting secure tokens.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;opentoken&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;open-token&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;auth&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;golang&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;55) Tool&lt;/strong&gt;: organizations-guardduty&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;:  A Python script that enables AWS Guardduty, and sends logs into S3, so it can be easily monitored. By default, it’s not a straightforward process to configure this correctly, this script helps automate the majority of steps from enabling the operationalizing of logging for Guarduty.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;guardduty&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s3&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;continuous-monitoring&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;alerting&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;56) Tool&lt;/strong&gt;: osiris&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Osiris is a library for building and deploying serverless web apps on Amazon Web Services, with a focus on simplicity and ease of use. It provides a simple way to build the application and tools to deploy it to AWS.&lt;/p&gt;

&lt;p&gt;An application built with Osiris is deployed to AWS as a Lambda function and an API Gateway API. Configuration is generated for CloudFormation to define the application resources.&lt;/p&gt;

&lt;p&gt;This repository includes configurations for app deployments within Twitch Security.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;osiris&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;57) Tool&lt;/strong&gt;: osiris-admin&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A bash script to automate the management of osiris.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;osiris&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;automation&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;58) Tool&lt;/strong&gt;: osiris-app&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A deployment configuration for osiris.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;osiris&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;automation&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;59) Tool&lt;/strong&gt;: osiris-config&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Configuration for deploying Osiris through AWS CloudFormation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;osiris&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;automation&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cloudformation&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;60) Tool&lt;/strong&gt;: osiris-debs3-proxy&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Empty repository.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;osiris&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;61) Tool&lt;/strong&gt;: osiris-health&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Osiris health check script.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;osiris&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;62) Tool&lt;/strong&gt;: osiris-pki-server&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Internal PKI server that covers Duo Security, and YubiKey&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;osiris&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;duo-security&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yubi-key&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;63) Tool&lt;/strong&gt;: osiris-registration&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: This is a Lambda function that automates the registration process for a new
Osiris stack instance. It primarily manages the DNS delegation process, subject
to the requisite authorization checks (which are stored in a DynamoDB table).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;osiris&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lambda&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;64) Tool&lt;/strong&gt;: osiris-selfservice&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Empty repository.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;osiris&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;65) Tool&lt;/strong&gt;: osiris-static-site&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: CloudFormation template to deploy static sites through Osiris.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;osiris&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;66) Tool&lt;/strong&gt;: osiris-update-stack&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Lambda function for scheduled updates of the Osiris CloudFormation stack.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;osiris&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;67) Tool&lt;/strong&gt;: osiris-v2&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A deprecated repository.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;osiris&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;68) Tool&lt;/strong&gt;: osiris-yubikey-client&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: This is the client for the osiris-pki-server, with a focus on issuance of
certificates for Yubikeys.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;osiris&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yubi-key&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;69) Tool&lt;/strong&gt;: ovpnmetrics&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: This python script scrapes metrics from OpenVPN Access Server (using the local
SQLite log database) and writes them to graphite.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;openvpn&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;graphite&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;70) Tool&lt;/strong&gt;: pandora-mvp&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: An internal project that uses SSM, S3, and EC2 APIs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s3&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ec2&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssm&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;71) Tool&lt;/strong&gt;: pandora-prototype&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Testing repository with CloudFormation configuration.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cloudformation&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;72) Tool&lt;/strong&gt;: password-exploration&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: An experiment that hosts passwords from 000webhoost, antipublic_combo, exploit.in database leaks. It uses AWS Athena and S3 to store datasets. The playbook shows queries to search compromised accounts that were leaked by Twitch employees.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;database-leaks&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;passwords&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;athena&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;73) Tool&lt;/strong&gt;: rpm-s3&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A Clone of https://github.com/crohr/rpm-s3 that is made to work with the newer Python boto3 library.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rpm&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s3&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;74) Tool&lt;/strong&gt;: secretsurfer&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A secret detection tool that scans for secrets in Git commit history, and reports whenever it finds a secret. It has the capability to validate specific findings for AWS credentials, Slack webhooks, and Twitch 0Auth tokens.&lt;/p&gt;

&lt;p&gt;It seems that Twitch has put major efforts into having multiple tools for preventing secrets at scale. This is not the only tool that does secrets detection that was internally developed by Twitch.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;secret-detection&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;75) Tool&lt;/strong&gt;: securitycenter-jira&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: This repository contains Twitch v1.0.0 of the Tenable SecurityCenter-JIRA integration originally written by Tenable Network Security.&lt;/p&gt;

&lt;p&gt;The official release by Tenable was v1.1.1, which has been archived and is available in the security/securitycenter-jira-archive repository for historical knowledge.&lt;/p&gt;

&lt;p&gt;The project ingests findings from Tenable, and stores it into JIRA tickets for tracking vulnerabilities.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jira&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tenable&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;security-scanning&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;76) Tool&lt;/strong&gt;: securitycenter-jira-archive&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: An archive of securitycenter-jira.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jira&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tenable&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;security-scanning&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;77) Tool&lt;/strong&gt;: shuffle&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Shuffle is a small piece of automation that can make OpenVPN ACL changes. It is
useful when a service’s IP addresses change.&lt;/p&gt;

&lt;p&gt;It is made of two components:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;An AWS Lambda function that runs in response to an SNS trigger. The message
from SNS contains details about the service and the change.&lt;/li&gt;
  &lt;li&gt;A Python script (“shuffle-applier”) that runs on the OpenVPN AS server. It is
responsible for the low-level ACL changes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Lambda function triggers the applier script via Amazon Systems Manager.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lambda&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;openvpn&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;78) Tool&lt;/strong&gt;: sift-aws&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: SIFT AMI for Twitch SIRT. This  is a collection of Ansible playbooks that builds and provisions  a SIFT workstation.&lt;/p&gt;

&lt;p&gt;The SIFT Workstation is a collection of free and open-source incident response and forensic tools designed to perform detailed digital forensic examinations in a variety of settings.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sift&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;forensics&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ansible&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;79) Tool&lt;/strong&gt;: sirt_alerts&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A Git repository of SIRT alerts and playbooks. It seems to be categorized according to the MITRE ATT&amp;amp;CK framework. It also covers playbooks for several TTPs on macOS, Windows and AWS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mitre&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;att&amp;amp;ck&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ttps&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;macos&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;windows&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;incident-response&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;80) Tool&lt;/strong&gt;: sirt_alerts_archive&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A Git repository that seems to be an archive of sirt_alerts. It covers a large number of playbooks and incidents detection write-ups.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mitre&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;att&amp;amp;ck&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ttps&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;macos&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;windows&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;incident-response&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;81) Tool&lt;/strong&gt;: sirt_lookup_tables&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Several CSV files that acts as a lookup table. It includes files for: TOR exit nodes, URLHAUS malicious urls, Pacu User-Agents, malicious Chrome extensions, and low-reputation IPs.&lt;/p&gt;

&lt;p&gt;This seems to be used in threat detection.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;threat-detection&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cti&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tor&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;urlhaus&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;82) Tool&lt;/strong&gt;: sirt_range_dev&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Empty repository.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;empty&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;83) Tool&lt;/strong&gt;: sirt-520&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: sirt-520 contains a single HTML/JavaScript file with no details. Reading the code, it seems to be a malware piece that acts as wormable payloads for pulling contacts from Google Contacts and then sending malware emails. The TTP used here is novel. The URL that is being sent to contacts is an authorization page for Google apps, where the app is authorized to get emails and contacts.&lt;/p&gt;

&lt;p&gt;The concept bypasses Google Safe url checks as the url being shared in the email points to https://accounts.google.com.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;phishing&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TTP&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;google-apps&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gsuite&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;exploit&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;84) Tool&lt;/strong&gt;: sirt-detection-ec2-instances&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: This repository contains provisioning scripts that initialize Windows and macOS machines and install detection agents. The detection agents used in the scripts are: CrowdStrike Falcon and Uptycs.&lt;/p&gt;

&lt;p&gt;It uses Terraform to deploy the machine, Bash for macOS machines, and Powershell for Windows machines.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;crowdstrike&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;uptycs&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;terraform&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ec2&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;85) Tool&lt;/strong&gt;: sirt-dns_report&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: This script is made for continuous monitoring purposes of the DNS infrastructure of Twitch. Twitch has a service called “changelog” that contains the DNS records of Twitch, and can be called through a REST API.&lt;/p&gt;

&lt;p&gt;The script pulls all the changelog, and sends an alert for changes to Twitch security email that automatically creates a JIRA ticket based on the email.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jira&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;email&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;smtp&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dns&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;infrasec&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;86) Tool&lt;/strong&gt;: sirt-gophish&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Re-deployable gophish infra for SIRT to run phishing exercises. It also includes Terraform code for deploying gophish with all the required configuration.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gophish&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;phishing&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;golang&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;terraform&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;87) Tool&lt;/strong&gt;: sirt-jira-issue-escalator&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A Lambda function that pulls data from JIRA through a JQL query that fetches tickets not marked as “Done”, and then pushes metrics to CloudWatch.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cloudwatch&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jira&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;88) Tool&lt;/strong&gt;: SIRT-JiraBot&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: JiraBot is modeled after Dropbox’s SecurityBot https://github.com/dropbox/securitybot.&lt;/p&gt;

&lt;p&gt;It includes JQL queries, interactive messages for Slack.&lt;/p&gt;

&lt;p&gt;The purpose of the tool is to allow interaction with security projects on JIRA. It runs on AWS Lambda.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jira&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;securitybot&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;slack&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lambda&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;89) Tool&lt;/strong&gt;: sirt-jirahandler&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: An incomplete project. It manages Jira tickets through the Jira Python library.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jira&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;90) Tool&lt;/strong&gt;: sirt-misp-cdk&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: CloudFormation port of a MISP deployment in Pulumi. A work-in-progress project.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pulumi&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cloudformation&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;91) Tool&lt;/strong&gt;: sirt-pulumi&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A customized version of https://github.com/MISP/misp-docker.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;misp&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pulumi&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;92) Tool&lt;/strong&gt;: sirt-report&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A script that pulls open incidents from JIRA and sends it as an email to Twitch security team as a report.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jira&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;incident-response&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;reporting&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;93) Tool&lt;/strong&gt;: sirtbot&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A Slack bot that is based off a fork of https://github.com/lins05/slackbot.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;slack&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;94) Tool&lt;/strong&gt;: SIRTGuardDutyRole-cloudformation&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A cloudformation config to enable Twitch SIRT to access GuardDuty in the target account.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;guardduty&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cloudformation&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;95) Tool&lt;/strong&gt;: sirtjira&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Another library to interact with Jira. It has the capability to create issues, manage issues, add comments, and other similar features.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jira&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;96) Tool&lt;/strong&gt;: sirtlib&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: An automation Python library to interact with Splunk, Uptycs, Amazon Anamoli (Internal Amazon Security service), and Salesforce IDM.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;splunk&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;amazon&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;salesforce&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;uptycs&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;97) Tool&lt;/strong&gt;: slaughter_bot&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: An automation bot that can send emails, pull open risks and incidents from Jira, and put them into Spreadsheet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;spreadsheet&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jira&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;email&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;98) Tool&lt;/strong&gt;: sonarvet&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A report parser for SonarQube written in Golang.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sonarqube&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;99) Tool&lt;/strong&gt;: spark_from_athena_uptycs&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A script to generate queries for AWS Spark and AWS Glue. It seems to use AWS Athena and Uptycs for the queries.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;athena&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws-athena&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws-spark&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws-glue&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;uptycs&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;100) Tool&lt;/strong&gt;: splunk-hec-go&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Splunk HEC Golang Library. It’s a forked version of https://github.com/fuyufjh/splunk-hec-go.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;splunk&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;101) Tool&lt;/strong&gt;: splunk-saved-searches&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Repository to manage the configuration for saved searches/alerting in Splunk to be integrated with an automated deployment lambda function.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;splunk&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;incident-response&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;102) Tool&lt;/strong&gt;: squidmetrics&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Squid statsd publisher. This python script scrapes metrics from Squid (using the local manager
interface) and writes them to statsd/statsite.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;squid&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;metrics&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;103) Tool&lt;/strong&gt;: ssm-logging-enrollment&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: ssm-logging-enrollment. A simple script to enable CloudWatch logging for SSM session manager.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cloudwatch&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssm&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;session-manager&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;logging&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;104) Tool&lt;/strong&gt;: subdomain_checker&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Subdomain Takeover Checker. Check if a list of sites is vulnerable to an S3 Bucket or Cloudfront CNAME Hijack.&lt;/p&gt;

&lt;p&gt;It has a feature to automatically claim vulnerable CloudFront and AWS S3 buckets that are not publicly claimed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;subdomain-takeover&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s3&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cloudfront&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;105) Tool&lt;/strong&gt;: tails&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Empty repository.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;empty&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;106) Tool&lt;/strong&gt;: takeover_check&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: SIRT Takeover DNS Checker. Sweeps across domains to find subdomain takeover vulnerabilities.&lt;/p&gt;

&lt;p&gt;It checks for AWS Beanstalk, CloudFront, S3, and signs of misconfiguration.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cloudfront&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s3&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;subdomain-takeover&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;107) Tool&lt;/strong&gt;: teleport&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Teleport configuration repository.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;teleport&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;108) Tool&lt;/strong&gt;: teleport-configuration&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Teleport Configuration. This repository contains configuration files in YAML format for Teleport.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;teleport&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;109) Tool&lt;/strong&gt;: teleport-dashboard&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Teleport dashboard.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;teleport&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;110) Tool&lt;/strong&gt;: teleport-dns-guardian&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Teleport DNS Guardian.
A small Python utility intended to be run as an AWS Lambda function. It can be used as part of a DNS round robin load balancing setup to keep the list of IPs in the DNS record updated based on Consul. It’s best to run once per minute.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;teleport&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;111) Tool&lt;/strong&gt;: teleport-enterprise-build&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Teleport Enterprise package builder.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;teleport&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;112) Tool&lt;/strong&gt;: teleport-remote&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: This includes the components to build and manage remote Teleport clusters.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;teleport&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;113) Tool&lt;/strong&gt;: teleport-util&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: This contains utilities used for managing or automating the Teleport deployment at Twitch.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;teleport&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;114) Tool&lt;/strong&gt;: terraform&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Security-related Terraform configuration.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;terraform&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;115) Tool&lt;/strong&gt;: tf-asg&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A Terraform module to create and manage autoscalling group.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;terraform&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;116) Tool&lt;/strong&gt;: tf-lambda-dogfish-sg&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Terraform module to manage “dogfish” project.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;terraform&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;117) Tool&lt;/strong&gt;: tf-teleport&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Terraform module for setting up teleport.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;terraform&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;118) Tool&lt;/strong&gt;: tf-teleport-auth-lb&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Terraform module that creates a network loadbalancer for Teleport auth service.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;terraform&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;119) Tool&lt;/strong&gt;: tf-teleport-dns-guardian&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Terraform module for setting up a lambda function to manage Teleport’s DNS round robin records.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;terraform&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;120) Tool&lt;/strong&gt;: threat-modeling&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A repository that hosts a threat-modeling diagram built with PlantUML about a portion of Twitch threat-model.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;threat-modeling&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;121) Tool&lt;/strong&gt;: tshproxy&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: This is a shim meant to wrap tsh and ssh for use in a ProxyCommand. It primarily
exists to automatically install or renew an SSH certificate if it is expired or
doesn’t exist.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;proxy&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;122) Tool&lt;/strong&gt;: twitch-bastion-util&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: This script will automate the client-side configuration steps process for the
Twitch Bastion (an internal service). Specifically, it will install the Teleport client software and
configure the ssh client to access production via a bastion host.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;teleport&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;123) Tool&lt;/strong&gt;: twitch-glitch-bot&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Slack bot that interacts with Jira, Slack and PagerDuty.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pagerduty&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;slack&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jira&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;124) Tool&lt;/strong&gt;: twitch-public-s3-bucket&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A CloudFormation template that provisions an internal S3 bucket.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s3&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cloudformation&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;125) Tool&lt;/strong&gt;: TwitchyOmega&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A forked version of https://github.com/FelisCatus/SwitchyOmega.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;proxy&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SwitchyOmega&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chrome&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chrome-extension&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;126) Tool&lt;/strong&gt;: UbuntuVulnData&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A report parser tool that contextualizes vulnerability reports on Ubuntu AMIs that are not enriched with additional vulnerability details.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vulnerability-management&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;127) Tool&lt;/strong&gt;: vacation-calendar&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: A Google Suite App that syncs team calendar when a member takes a vacation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;google-suite&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gsuite&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;automation&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;productivity&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;128) Tool&lt;/strong&gt;: wireguard-gateway&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: Wireguard gateway: a framework to setup a full Wireguard infrastructure on AWS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wireguard&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;129) Tool&lt;/strong&gt;: yeti-infra&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: An incomplete project. It’s a Terraform module for deploying YETI project for threat-intelligence.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;terraform&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;threat-intelligence&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;final-thoughts&quot;&gt;Final Thoughts&lt;/h1&gt;

&lt;p&gt;Twitch Security invested thousands of hours in building its security tools and security program. I consider the tools developed internally to be advanced, well-thought and has done with excellent use-cases. At the time of writing the blog post, Twitch has not released a postmortem yet about the Twitch breach, how it happened, and technical details about the breach.&lt;/p&gt;

&lt;p&gt;Although the leaked security data covers the tools, it doesn’t cover the security architecture and the security program details. It’s hard to come up with a definite conclusion of how the breach could have happened.&lt;/p&gt;

&lt;p&gt;I can see that there is less focus on the tools for Identity Management and Access Control. Also, I can not see tools or references for the Security automation of SAST to scan the CI pipeline. Assets Discovery is done well, but I can not see AWS-related checks for AWS Policies and Role-Based access validation.&lt;/p&gt;

&lt;p&gt;The continuous security scanning from an AppSec perspective seems limited from seeing the developed tools. It’s possible that Twitch is running COTS tools instead of building their tools internally, but this also is not clear, as I haven’t seen ingestion for commercial DAST tools.&lt;/p&gt;

&lt;p&gt;The Twitch breach acts as a reality check on organizations and companies that are building their security program. The possibility of a breach is always there, organizations can take the next step and work in “assume-breach” playbooks and build additional security controls for their security program.&lt;/p&gt;

&lt;h1 id=&quot;about-fullhuntio&quot;&gt;About FullHunt.io&lt;/h1&gt;
&lt;p&gt;FullHunt is the Next-Generation Attack Surface Management Platform. FullHunt enables companies to discover all of their attack surfaces, monitor them for exposure, and continuously scan them for the latest security vulnerabilities and risks. We help companies around the world in securing their external attack surface using our technologies that are scanning millions of Internet-connected assets and cloud resources.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Are you an enterprise that is looking to build security for their External Attack Surface? Please reach out to us at &lt;a href=&quot;https://fullhunt.io&quot;&gt;fullhunt.io&lt;/a&gt;, and we will be happy to solve your challenges.&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;https://www.bbc.com/news/technology-58817658&lt;/li&gt;
  &lt;li&gt;https://www.theverge.com/2021/10/6/22712365/twitch-data-leak-breach-security-confirmation-comments&lt;/li&gt;
  &lt;li&gt;https://www.nytimes.com/2021/10/06/technology/twitch-data-breach.html&lt;/li&gt;
&lt;/ol&gt;</content><author><name>mazinahmed</name></author><category term="blog" /><category term="blog" /><category term="research" /><category term="twitch" /><category term="devops" /><category term="devsecops" /><category term="cloudsecurity" /><summary type="html"></summary></entry><entry><title type="html">Attacking Modern Environments Series: Attack Vectors on Terraform Environments</title><link href="https://mazinahmed.net/blog/attacking-terraform-environments/" rel="alternate" type="text/html" title="Attacking Modern Environments Series: Attack Vectors on Terraform Environments" /><published>2022-01-29T00:00:00-06:00</published><updated>2022-01-29T00:00:00-06:00</updated><id>https://mazinahmed.net/blog/attacking-terraform-environments</id><content type="html" xml:base="https://mazinahmed.net/blog/attacking-terraform-environments/">&lt;hr /&gt;

&lt;p&gt;I have given a talk about my latest research, “Attack Vectors on Terraform Environments”.&lt;/p&gt;

&lt;h2 id=&quot;about-the-talk&quot;&gt;About the talk&lt;/h2&gt;
&lt;p&gt;Ever come across an environment in an engagement that uses Terraform for IAAC (infrastructure-as-code) management?
Almost every modern company does now.&lt;/p&gt;

&lt;p&gt;In this talk, I will be sharing techniques and attack vectors to exploit and compromise Terraform environments in engagements, as well as patterns that I have seen that achieve successful infrastructure takeover against companies.
I will be also covering detection and prevention methods for each attack vector discussed in my talk.&lt;/p&gt;

&lt;p&gt;This is part of my work-in-progress research in cloud security and attacking modern environments.&lt;/p&gt;

&lt;h2 id=&quot;recorded-talk&quot;&gt;Recorded Talk&lt;/h2&gt;

&lt;iframe width=&quot;560&quot; height=&quot;310&quot; src=&quot;https://www.youtube.com/embed/8fnbkZwZsRg&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h3 id=&quot;watch-on-youtube&quot;&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=8fnbkZwZsRg&quot;&gt;Watch on Youtube&lt;/a&gt;&lt;/h3&gt;

&lt;h3 id=&quot;download-slides-pdf&quot;&gt;&lt;a href=&quot;https://github.com/mazen160/public/raw/master/documents/Attacking%20Modern%20Environments%20Series%20-%20Attacking%20Terraform%20Environments.pdf&quot;&gt;Download: Slides (PDF)&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&quot;download-slides-pptx&quot;&gt;&lt;a href=&quot;https://github.com/mazen160/public/raw/master/documents/Attacking%20Modern%20Environments%20Series%20-%20Attacking%20Terraform%20Environments.pptx&quot;&gt;Download: Slides (PPTX)&lt;/a&gt;&lt;/h3&gt;</content><author><name>mazinahmed</name></author><category term="blog" /><category term="blog" /><category term="research" /><category term="terraform" /><category term="devops" /><category term="devsecops" /><category term="cloudsecurity" /><summary type="html"></summary></entry><entry><title type="html">Interview With the AppSec Podcast: Terraform Security</title><link href="https://mazinahmed.net/blog/interview-with-appsec-podcast-terraform-security/" rel="alternate" type="text/html" title="Interview With the AppSec Podcast: Terraform Security" /><published>2021-10-17T00:00:00-05:00</published><updated>2021-10-17T00:00:00-05:00</updated><id>https://mazinahmed.net/blog/interview-with-appsec-podcast-terraform-security</id><content type="html" xml:base="https://mazinahmed.net/blog/interview-with-appsec-podcast-terraform-security/">&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/dd31ccbf-b8e2-4d56-9c5b-ae3a2d2bd65a.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I did an interview with the AppSec Podcast to talk about IAC and Terraform. We discussed Terraform, why IAAC is important to your organization, technical risks brought when running Terraform on your environment, and few discussions related to my &lt;a href=&quot;https://www.youtube.com/watch?v=d4V75rrVrL4&quot;&gt;DEFCON talk about Attack Vectors on Terraform Environments&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/81b656d7-20eb-41c9-9fd1-0338125186a6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;310&quot; src=&quot;https://www.youtube.com/embed/jdh-yHKLAWU&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;listen-to-the-podcast&quot;&gt;Listen to the Podcast&lt;/h2&gt;

&lt;h3 id=&quot;watch-on-youtube&quot;&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=jdh-yHKLAWU&quot;&gt;Watch on Youtube&lt;/a&gt;&lt;/h3&gt;

&lt;h3 id=&quot;listen-on-spotify&quot;&gt;&lt;a href=&quot;https://open.spotify.com/episode/0bojnJd6kyBOomojMFXKgX?si=d394stezSfWAfsSwy3MKNA&quot;&gt;Listen on Spotify&lt;/a&gt;&lt;/h3&gt;

&lt;h3 id=&quot;listen-on-apple-podcast&quot;&gt;&lt;a href=&quot;https://podcasts.apple.com/us/podcast/mazin-ahmed-terraform-security/id1154351685?i=1000537757479&quot;&gt;Listen on Apple Podcast&lt;/a&gt;&lt;/h3&gt;</content><author><name>mazinahmed</name></author><category term="blog" /><category term="blog" /><category term="interview" /><category term="podcast" /><category term="terraform" /><category term="devops" /><category term="devsecops" /><category term="cloudsecurity" /><summary type="html"></summary></entry><entry><title type="html">tfquery: Run SQL queries on your Terraform infrastructure</title><link href="https://mazinahmed.net/blog/tfquery-project-release/" rel="alternate" type="text/html" title="tfquery: Run SQL queries on your Terraform infrastructure" /><published>2021-04-28T00:00:00-05:00</published><updated>2021-04-28T00:00:00-05:00</updated><id>https://mazinahmed.net/blog/tfquery-project-release</id><content type="html" xml:base="https://mazinahmed.net/blog/tfquery-project-release/">&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/7150a8dc-f101-423c-934a-ffa24a396e66.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Have you ever tried analyzing Terraform environment with thousands of cloud resources for security and DevOps? It’s used to be hard, until now!&lt;/p&gt;

&lt;p&gt;I’m open-sourcing my newest project, tfquery: a framework that allows running SQL queries on Terraform code. It saved me dozens of hours in analysis.&lt;/p&gt;

&lt;p&gt;Tfquery is made to help in answering questions that are hard to answer about your infrastructure-as-code. It allows querying resources and analyzing its configuration using a SQL-powered framework.&lt;/p&gt;

&lt;p&gt;I built it out of a real-world problem where I need to understand an extremely large Terraform environment. Has been highly helpful in making work easier.&lt;/p&gt;

&lt;p&gt;This is a starting point for an awesome project. Feel free to read more at the Github repository.&lt;/p&gt;

&lt;h3 id=&quot;github-repository-httpsgithubcommazen160tfquery&quot;&gt;Github Repository: &lt;a href=&quot;https://github.com/mazen160/tfquery&quot;&gt;https://github.com/mazen160/tfquery&lt;/a&gt;&lt;/h3&gt;</content><author><name>mazinahmed</name></author><category term="blog" /><category term="blog" /><category term="project" /><category term="terraform" /><category term="devops" /><category term="devsecops" /><category term="cloudsecurity" /><summary type="html"></summary></entry><entry><title type="html">DDoS is not Dead: Building a Scalable DDoS Framework</title><link href="https://mazinahmed.net/blog/stressful-ddos-framework/" rel="alternate" type="text/html" title="DDoS is not Dead: Building a Scalable DDoS Framework" /><published>2021-04-13T00:00:00-05:00</published><updated>2021-04-13T00:00:00-05:00</updated><id>https://mazinahmed.net/blog/stressful-ddos-framework</id><content type="html" xml:base="https://mazinahmed.net/blog/stressful-ddos-framework/">&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;/assets/static/cb37c2ae-5496-4f73-8e32-3e97a2bf736e.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;abstract&quot;&gt;Abstract&lt;/h1&gt;

&lt;p&gt;I’m releasing my latest project, &lt;a href=&quot;https://stressful.io&quot;&gt;Stressful.io&lt;/a&gt;, an advanced DDoS framework for testing DDoS defenses at scale. I’m also providing a fully free simulation to non-profit organizations and startups focused on privacy and digital rights.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;I have always been fascinated by DDoS attacks. You may have the most sophisticated defenses, yet, your organization can be directly affected by a DDoS attack that takes down your payment gateway for 3 hours. DDoS attacks are a real concern that needs to be put on the organization’s radar, not on a postmortem after an attack happens.&lt;/p&gt;

&lt;h2 id=&quot;time-is-money-especially-on-downtime&quot;&gt;Time is Money, Especially on Downtime&lt;/h2&gt;

&lt;p&gt;The cost of downtime is high and expensive for businesses, and it varies from one industry to another. A payment gateway processor downtime can affect many customers that solely rely on the payment gateway to operate. An hour’s downtime costs millions of dollars in losses.&lt;/p&gt;

&lt;p&gt;The same goes for an E-Commerce website, some E-Commerces have more than 30% of their revenue coming from Black Friday each year. A DDoS attack that disrupts users from making purchases on Black Friday can cause major losses for the E-commerce business.&lt;/p&gt;

&lt;p&gt;Furthermore, when a DDoS attack hits a SAAS platform and causes an outage, it will indirectly disrupt thousands (if not millions) of businesses and people’s lives around the world. Think of this as your day-to-day email provider, a CDN that delivers JavaScript for your websites, or even Google Docs that I’m using to write this blog post.&lt;/p&gt;

&lt;h2 id=&quot;protonmail-ddos-attack-changed-my-perspective&quot;&gt;ProtonMail DDoS Attack Changed My Perspective&lt;/h2&gt;

&lt;p&gt;Back when I was working at ProtonMail, I had the opportunity to witness one of the largest attacks that happened in Europe in 2015 &lt;a href=&quot;https://www.techrepublic.com/article/exclusive-inside-the-protonmail-siege-how-two-small-companies-fought-off-one-of-europes-largest-ddos/&quot;&gt;1&lt;/a&gt; and 2018 &lt;a href=&quot;https://techcrunch.com/2018/06/27/protonmail-suffers-ddos-attack-that-takes-its-email-service-down-for-minutes/&quot;&gt;2&lt;/a&gt;. These attacks were devastating and changed my perspective on DDoS attacks and their effectiveness.&lt;/p&gt;

&lt;p&gt;ProtonMail security has some of the most talented people that I have had the chance to work with. I can’t imagine how this attack could have been handled without the work of all the amazing ProtonMail team.&lt;/p&gt;

&lt;p&gt;We had built up awesome technologies to prevent attacks that could breach the data of ProtonMail, yet, a massive DDoS attack allowed attackers to disrupt the availability of ProtonMail to users. A DDoS attack is not capable of risking the security nor the privacy of ProtonMail, but it was effective to put us in a stressful situation to fight back and return the services back to normal.&lt;/p&gt;

&lt;p&gt;If there is a main lesson I learned from this experience is DDoS simulations matter. If we simulate a DDoS attack with similar capabilities and TTPs (tactics, techniques, and procedures), we would be prepared and possibly more ready to handle an attack with this size. Putting DDoS and availability risks on the map became important for me when building a security program of any size.&lt;/p&gt;

&lt;h1 id=&quot;building-the-dream-product-stressful-framework&quot;&gt;Building the Dream Product: Stressful Framework&lt;/h1&gt;

&lt;p&gt;I explored the current market and haven’t found a professional service that satisfies my vision of what should be available to companies. My vision is clear: as a customer, I want to have a trusted platform where I can consult for verifying the existing DDoS defenses, to show me what’s wrong based on research and proven tests, and to show me how to patch weaknesses.&lt;/p&gt;

&lt;p&gt;Trusting a security vendor blindly is always a bad idea, companies in the market can easily sell snake oil, promising 100% protection. Without verification testing, I do not trust a security product in preventing attacks.&lt;/p&gt;

&lt;h3 id=&quot;when-i-didnt-find-a-solution-i-started-the-journey-of-building-stressfulio&quot;&gt;When I didn’t find a solution, I started the journey of building Stressful.io.&lt;/h3&gt;

&lt;h2 id=&quot;researching-ttps&quot;&gt;Researching TTPs&lt;/h2&gt;

&lt;p&gt;The most difficult part in having this project come to reality was the research part. I started collecting repositories and historical archives for attacks that have been witnessed in the past 15 years. I also monitored darknet sources for new trends and techniques. Every new research that involves DDoS attacks has been passionately reviewed and analyzed, and I built up a lab in the cloud to replicate attacks and rate researches and techniques I have been seeing.&lt;/p&gt;

&lt;p&gt;I also reverse-engineered tools published in the black market that are being used to conduct active attacks. I studied TTPs of different groups and built up my internal knowledge-base for everything related to DDoS attacks.&lt;/p&gt;

&lt;p&gt;This was majorly a side project that I have been imagining over the years, and in 2020, I took serious focus to complete the product.&lt;/p&gt;

&lt;h2 id=&quot;quality-vs-quantity-attacks&quot;&gt;Quality vs. Quantity Attacks&lt;/h2&gt;

&lt;p&gt;One factor that the market is fully relying on measuring the complexity of DDoS attacks is the total quantity the threat group was able to generate against the target. The thing is, generating traffic today is much easier than before. A 50 GBPS DDoS attack today is much easier to generate than 10 years ago, where the cloud era wasn’t as huge as before. Infrastructure deployment 10 years ago wasn’t as accessible as today. Today, Infrastructure-as-code became the de-facto for deploying a fully scalable infrastructure within minutes. The same goes for defense, mitigating quantity DDoS attacks became much better over the years with cloud and CDN providers.&lt;/p&gt;

&lt;p&gt;On the other side, DDoS attacks that focus on Application-layer exploitation were being dismissed by most deployments I have personally reviewed over the years. Additionally, DoS vectors that exploits and abuses a security vulnerability of a given product or application are patterns that I have been seeing.&lt;/p&gt;

&lt;p&gt;Application-layer DDoS attacks are harder to defend, much difficult to understand, and most security vendors do not protect against them. If a security vendor claims to protect against Application-layer DoS attacks, I would be happy to provide a demo to showcase all their weaknesses using the &lt;a href=&quot;https://stressful.io&quot;&gt;Stressful.io&lt;/a&gt; framework.&lt;/p&gt;

&lt;h2 id=&quot;stressfulio-architecture&quot;&gt;Stressful.io Architecture&lt;/h2&gt;

&lt;p&gt;I’m planning to release technical documentation in the future about the architecture I built for &lt;a href=&quot;https://stressful.io&quot;&gt;Stressful.io&lt;/a&gt; that fully relies on being cloud-native to scale.&lt;/p&gt;

&lt;p&gt;After building the app on &lt;a href=&quot;https://stressful.io&quot;&gt;Stressful.io&lt;/a&gt;, I integrated the CD pipeline with Terraform to deploy the infrastructure used in simulations. I have built the integration with Microsoft Azure, Amazon AWS, and there will be an integration with Google Cloud soon.&lt;/p&gt;

&lt;h3 id=&quot;engine&quot;&gt;Engine&lt;/h3&gt;

&lt;h4 id=&quot;language-of-choice&quot;&gt;Language of Choice?&lt;/h4&gt;

&lt;p&gt;I wrote the framework in Golang as I have been seeing great potential for DDoS in Golang. The networking API in Golang is much reliable, and the concurrency and state management in projects are much promising. Golang is the future for scalable and resource-extensive applications. I have been doing benchmarks on the Stressful, and I’m impressed by various features Golang allows and provides.&lt;/p&gt;

&lt;h3 id=&quot;modules&quot;&gt;Modules&lt;/h3&gt;

&lt;p&gt;I have built modules to support attacks for different vectors.&lt;/p&gt;

&lt;p&gt;This is an example of modules I have been building in the framework:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;HTTP SlowPost Attack&lt;/li&gt;
  &lt;li&gt;HTTP Slowloris attack (GET)&lt;/li&gt;
  &lt;li&gt;HTTP Web Cache-Poisoning Attack&lt;/li&gt;
  &lt;li&gt;HTTP SlowLoris (Infinite Headers)&lt;/li&gt;
  &lt;li&gt;Amazon AWS Denial of Wallet Attacks&lt;/li&gt;
  &lt;li&gt;Microsoft Azure Denial of Wallet Attacks&lt;/li&gt;
  &lt;li&gt;HTTP/2 DoS Attacks&lt;/li&gt;
  &lt;li&gt;HTTP DoS via Headless Browsers&lt;/li&gt;
  &lt;li&gt;WordPress Resource Exhaustion&lt;/li&gt;
  &lt;li&gt;HTTP Hash Collision Attack&lt;/li&gt;
  &lt;li&gt;HTTP Memory Exhaustion&lt;/li&gt;
  &lt;li&gt;Xerxes Attack&lt;/li&gt;
  &lt;li&gt;SOAP XML Quadratic Blowup Attack&lt;/li&gt;
  &lt;li&gt;SOAP XML Billion Laughs Attack&lt;/li&gt;
  &lt;li&gt;HTTP Keep-Alive Flood Attack&lt;/li&gt;
  &lt;li&gt;HTTP Unlimited Downloads&lt;/li&gt;
  &lt;li&gt;HTTP GET Flood&lt;/li&gt;
  &lt;li&gt;HTTP SlowPost (Infinite Uploads)&lt;/li&gt;
  &lt;li&gt;HTTP HULK Attack&lt;/li&gt;
  &lt;li&gt;MySQL Resource Exhaustion&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is just part of the modules I have developed. I also develop modules based on specific use-cases and scenarios. Lastly, I will be also keeping an up-to-date arsenal for DoS attacks and modules on the framework.&lt;/p&gt;

&lt;h1 id=&quot;whats-next&quot;&gt;What’s next?&lt;/h1&gt;

&lt;p&gt;Contact me on &lt;a href=&quot;mailto:info@stressful.io?subject=DoS%20Simulation%20Demo%20-%20Query&quot;&gt;info@Stressful.io&lt;/a&gt; to get a free consultation demo for your organization. I’m also providing a fully free simulation to non-profit organizations and startups focused on privacy and digital rights.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
Interested in DDoS capabilities for your company? Let’s have a chat and see how I can help!&lt;/p&gt;

&lt;h3 id=&quot;are-you-a-researcher-interested-in-the-ddos-market-and-ddos-defenses&quot;&gt;Are you a researcher interested in the DDoS market and DDoS defenses?&lt;/h3&gt;

&lt;p&gt;Let’s connect and share thoughts. My contact details are available on the website.&lt;/p&gt;

&lt;hr /&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.techrepublic.com/article/exclusive-inside-the-protonmail-siege-how-two-small-companies-fought-off-one-of-europes-largest-ddos/&quot;&gt;https://www.techrepublic.com/article/exclusive-inside-the-protonmail-siege-how-two-small-companies-fought-off-one-of-europes-largest-ddos/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://techcrunch.com/2018/06/27/protonmail-suffers-ddos-attack-that-takes-its-email-service-down-for-minutes/&quot;&gt;https://techcrunch.com/2018/06/27/protonmail-suffers-ddos-attack-that-takes-its-email-service-down-for-minutes/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name>mazinahmed</name></author><category term="blog" /><category term="blog" /><category term="project" /><category term="stressful" /><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://mazinahmed.net/assets/static/cb37c2ae-5496-4f73-8e32-3e97a2bf736e.jpg" /><media:content medium="image" url="https://mazinahmed.net/assets/static/cb37c2ae-5496-4f73-8e32-3e97a2bf736e.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>